{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h1/HW1.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","classes","message","image","src","avatar","name","text","time","HW1","useState","Date","toLocaleTimeString","msgArr","setMsgArr","msg","setMsg","chat","map","index","sendArea","value","onChange","event","currentTarget","button","onClick","Affair","affair","priority","deleteAffairCallback","_id","Affairs","mappedAffairs","data","a","setFilter","defaultAffairs","HW2","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","noError","onBlur","disabled","GreetingContainer","users","addUserCallback","setName","setError","length","e","trim","alert","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","Header","Routes","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.6f3dcdc9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3i77k\",\"image\":\"Message_image__1EV9_\",\"name\":\"Message_name__3otzw\",\"text\":\"Message_text__vnILq\",\"time\":\"Message_time__2UC82\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"HW1_chat__1FvVC\",\"sendArea\":\"HW1_sendArea__2aXjx\",\"text\":\"HW1_text__19ndA\",\"button\":\"HW1_button__WMD5_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__3kXP3\",\"superInput\":\"SuperInputText_superInput__2ucGu\",\"error\":\"SuperInputText_error__1qjko\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__2NsC5\",\"error\":\"Greeting_error__5c4Im\",\"noError\":\"Greeting_noError__1H4H0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__H6ax8\",\"column\":\"HW4_column__1c01s\",\"testSpanError\":\"HW4_testSpanError__2R2zr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__tJBZu\",\"red\":\"SuperButton_red__QDvlG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1T0DM\",\"spanClassName\":\"SuperCheckbox_spanClassName__2EGfk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__wsJWR\"};","import React, {useState} from 'react'\r\nimport classes from './Message.module.css'\r\n\r\nexport type MessageDataProps = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: MessageDataProps) {\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.message}>\r\n                <div className={classes.image}>\r\n                    <img src={props.avatar}/>\r\n                </div>\r\n                <div className={classes.name}>\r\n                    {props.name}\r\n                </div>\r\n                <div className={classes.text}>\r\n                    {props.message}\r\n                </div>\r\n                <div className={classes.time}>\r\n                    {props.time}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React, {useState} from 'react'\r\nimport Message, {MessageDataProps} from \"./Message\";\r\nimport classes from './HW1.module.css'\r\n\r\nfunction HW1() {\r\n\r\n    const [msgArr, setMsgArr] = useState<MessageDataProps[]>([{\r\n        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n        name: 'Nero',\r\n        message: 'aa',\r\n        time: new Date().toLocaleTimeString()\r\n    }])\r\n\r\n    const [msg, setMsg] = useState<string>('')\r\n\r\n    return (\r\n        <div className={classes.chat}>\r\n            <hr/>\r\n            {msgArr.map((message, index) =>\r\n                <Message\r\n                    avatar={msgArr[0].avatar}\r\n                    name={msgArr[0].name}\r\n                    message={msgArr[index].message}\r\n                    time={msgArr[index].time}\r\n                />\r\n            )}\r\n\r\n            <div className={classes.sendArea}>\r\n                <textarea className={classes.text} value={msg}\r\n                          onChange={event => setMsg(event.currentTarget.value)}></textarea>\r\n                <button className={classes.button} onClick={() => {\r\n                    if (msg !== '') {\r\n                        setMsgArr(msgArr => [...msgArr,\r\n                            {\r\n                                avatar: msgArr[0].avatar,\r\n                                name: msgArr[0].name,\r\n                                message: msg,\r\n                                time: new Date().toLocaleTimeString()\r\n                            }\r\n                        ]);\r\n                        setMsg('');\r\n                    }\r\n                }}>Send\r\n                </button>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\r\n\r\n    return (\r\n        <div>\r\n            {props.affair.name} <span>---</span> {props.affair.priority} <span>---</span>\r\n\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')} // need to fix\r\n    const setHigh = () => {props.setFilter('high')}\r\n    const setMiddle = () => {props.setFilter('middle')}\r\n    const setLow = () => {props.setFilter('low')}\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'low' | 'middle' | 'high' // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    switch(filter) {\r\n        case 'high':\r\n            return affairs.filter(a => a.priority === 'high')\r\n        case 'middle':\r\n            return affairs.filter(a => a.priority === 'middle')\r\n        case 'low':\r\n            return affairs.filter(a => a.priority === 'low')\r\n        default:\r\n            return affairs\r\n    }\r\n    // if (filter === 'all') return affairs\r\n    // else return // need to fix\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(a => a._id !== _id)\r\n    // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : s.noError // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} className={inputClass} onBlur={setNameCallback}/>\r\n            <span>{error}</span>\r\n            <button onClick={addUser} disabled={!name}>add</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        if (e.currentTarget.value.trim() === '') {\r\n            setError('Name can not be empty!')\r\n            setName('')\r\n        } else {\r\n            setName(e.currentTarget.value) // need to fix\r\n            setError('')\r\n        }\r\n    }\r\n    const addUser = () => {\r\n        if (name !== '') {\r\n            addUserCallback(name)\r\n            alert(`Hello  ${name}!`) // need to fix\r\n            setName('')\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        const newUser = {_id: v1(), name: name}\r\n        setUsers([...users, newUser]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${error ? '' : s.superInput}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : ''} ${s.default}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'field is required'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            // add NavLinks\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            {/*<Switch>*/}\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            {/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\r\n\r\n            {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\r\n                // add routes\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            {/*<Route render={() => <Error404/>}/>*/}\r\n\r\n            {/*</Switch>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            {/*<HashRouter>*/}\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            {/*</HashRouter>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}